@model DSLNG.PEAR.Web.ViewModels.InputData.FormInputDataViewModel
@using DSLNG.PEAR.Web.ViewModels.DerTransaction;
@{
    ViewBag.Title = "FormInputData";
}

<h2>Form Input Data</h2>
<div class="row">
    <div class="col-sm-12">
        <form class="form-inline">
            <div class="form-group form-list">
                <font color="#FFFFFF">Date : </font>
                <input id="currentDate" class="form-control datepicker" type="text">
                <span class="field-validation-valid" data-valmsg-for="StartInDisplay" data-valmsg-replace="true"></span>
            </div>
        </form>
    </div>
</div>
<table class="table table-hover table-transparent table-bordered table-form-input-data">
    <thead>
        <tr style="border-bottom:1px solid #fff">
            <td>Group Name</td>
            <td>KPI</td>
            @*<td>@Model.Date.AddDays(-1).ToString("d MMMM yyyy")</td>*@
            <td>@Model.Date.ToString("d MMMM yyyy")</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.GroupInputDatas.OrderBy(x => x.Order))
        {
            <tr style="border-bottom:none; border-right:1px solid #fff">
                <td><span style="font-weight:bold">@item.Name</span></td>
                <td colspan="3"></td>
            </tr>

            foreach (var kpi in item.InputDataKpiAndOrders.OrderBy(x => x.Order))
            {
                <tr>
                    <td></td>
                    <td>@kpi.KpiName</td>
                    <td style="border-right:1px solid #fff">
                        @Html.DisplayKpiInformationInput(Model.KpiInformationValues, kpi.KpiId, 1, kpi.KpiMeasurement, "prev")
                    </td>
                    @*<td><input type="text" /></td>*@
                </tr>
            }

        }
    </tbody>
</table>

<a href="@Url.Action("Index")">Back</a>

@section Scripts {
    <script type="text/javascript">
        function getQueryVariable(variable) {
            var query = window.location.search.substring(1);
            var vars = query.split('&');
            for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split('=');
                if (decodeURIComponent(pair[0]) == variable) {
                    return decodeURIComponent(pair[1]);
                }
            }
            return null;
        }
        function updateQueryStringParameter(uri, key, value) {
            var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
            var separator = uri.indexOf('?') !== -1 ? "&" : "?";
            if (uri.match(re)) {
                return uri.replace(re, '$1' + key + "=" + value + '$2');
            }
            else {
                return uri + separator + key + "=" + value;
            }
        }

        var reloadView = function () {
            window.document.location = updateQueryStringParameter(window.location.href, "date", encodeURIComponent($('.datepicker').val()));
        };

        $(document).ready(function () {
            var date = getQueryVariable('date');
            if (date == null) {
                $('.datepicker').val("@DateTime.Now.ToString("MM/dd/yyyy")");
            } else {
                $('.datepicker').val(decodeURIComponent(date));
            }
            $('.datepicker').datetimepicker({
                format: "MM/DD/YYYY",
                focusOnShow: false
            }).on('dp.change', function (e) {
                $(".datepicker").blur();
                reloadView();
            });
            var currentDate = $('.datepicker').val();

            $('input.der-kpi').keyup(function (e) {
                var $this = $(this);
                if (e.keyCode == 13) {
                    console.log($this);
                    var kpiId = $this.data('kpi-id');
                    console.log(kpiId);
                    var type = $this.data('type');
                    var tabindex = $this.attr('tabindex');
                    var nextTabindex = parseInt(tabindex) + 1;
                    var id = $this.attr('data-id');
                    console.log(id);
                    var value = $this.val();
                    var valueType = $this.data('value-type');
                    $this.addClass('in-progress');
                    $.post("/dertransaction/updatekpi", { kpiId: kpiId, type: type, date: currentDate, id: id, value: value, valueType: valueType }, function (resp) {
                        var $next = $('[tabindex=' + nextTabindex + ']');
                        if ($next.is("textarea")) {
                            tinyMCE.get($next.attr('id')).focus()
                        } else {
                            $next.focus();
                        }

                        $this.removeClass('in-progress');
                        if ($this.hasClass('der-value-prev')) {
                            $this.removeClass('der-value-prev');
                        }
                        if ($this.hasClass('der-value-empty')) {
                            $this.removeClass('der-value-empty');
                        }
                        $this.addClass('der-value-now');
                        if (parseInt($this.data('id')) == 0) {
                            $this.attr('data-id', resp.Id);
                        }
                    })

                }
            });

        });
    </script>
}