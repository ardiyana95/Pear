@model DSLNG.PEAR.Web.ViewModels.EconomicSummary.EconomicSummaryReportViewModel
@{
    ViewBag.Title = "Economic Summary";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<string> groupsAdded = new List<string>();
}

<h2>Economic Summary</h2>

@{
    foreach (var @group in Model.Groups)
    {
        var uniqueGroupName = group.Id + "_" + group.Name;
        if (!groupsAdded.Contains(uniqueGroupName))
        {
    <h4>@group.Name</h4>
    <table class="table table-hover table-transparent table-bordered">
        <tr>
            <th rowspan="2">No</th>
            <th rowspan="2">Key Ouput</th>
            <th rowspan="2">Measurement</th>
            @foreach (var scenario in Model.Scenarios)
            {
                <th colspan="2">@scenario.Name</th>
            }
        </tr>
        <tr>
            @foreach (var scenario in Model.Scenarios)
            {
                <th>Actual</th>
                <th>Forecast</th>
            }

        </tr>
        @foreach (var keyoutput in @group.KeyOutputs)
        {
            <tr>
                <td>1</td>
                <td>@keyoutput.Name</td>
                <td>@keyoutput.Measurement</td>

                @foreach (var scenario in Model.Scenarios)
                {
                    @GetValue(scenario.Id, keyoutput.Name, @group.Id);
                }
            </tr>
        }
    </table>
    <hr />
        }

        groupsAdded.Add(uniqueGroupName);
    }
}

@helper GetValue(int scenarioId, string keyOutputName, int groupId)
{
    var groups = Model.Groups.Where(x => x.Id == groupId).ToList();
    foreach (var g in groups)
    {
        var outputResult = g.KeyOutputs.FirstOrDefault(x => x.Scenario.Id == scenarioId && x.Name == keyOutputName);
        if (outputResult != null && outputResult.OutputResult != null)
        {
            <td>@outputResult.OutputResult.Actual</td>
            <td>@outputResult.OutputResult.Forecast</td>
        }
    }
}