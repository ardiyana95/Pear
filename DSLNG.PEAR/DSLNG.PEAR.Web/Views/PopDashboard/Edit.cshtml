@model DSLNG.PEAR.Web.ViewModels.PopDashboard.SavePopDashboardViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="pop-dashboard-save">
    @using (Html.BeginForm("Edit", "PopDashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-12">
            <div class="title">Pop Dashboard</div>
            <div>@Html.ValidationSummary(true)</div>
        </div>
        <div class="col-md-12">
            <div class="form-inline whitebox">
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.Title)
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Title)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.Number)
                    @Html.TextBoxFor(model => model.Number, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Number)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.Subtitle)
                    @Html.TextBoxFor(model => model.Subtitle, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Subtitle)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.DashboardObjective)
                    @Html.TextBoxFor(model => model.DashboardObjective, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DashboardObjective)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.StructureLeader)
                    @Html.TextBoxFor(model => model.StructureLeader, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StructureLeader)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.StructureOwner)
                    @Html.TextBoxFor(model => model.StructureOwner, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StructureOwner)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.ResourceTotalCost)
                    @Html.TextBoxFor(model => model.ResourceTotalCost, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ResourceTotalCost)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.ResourceCategory)
                    @Html.TextBoxFor(model => model.ResourceCategory, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ResourceCategory)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.ResourceRemark)
                    @Html.TextBoxFor(model => model.ResourceRemark, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ResourceRemark)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.IsActive)
                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.Status)
                    @Html.DropDownListFor(model => model.Status, Model.Statuses, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Attachment, new { @class = "control-label" })
                    <input type="file" name="file" id="file" class="form-control" />
                    @Html.ValidationMessageFor(model => model.Attachment)
                </div>


            </div>
        </div>
        <div class="col-md-12 artifact-designer-btns">
            <button type="submit" class="btn btn-primary btn-lg"><span class="fa fa-floppy-o"></span>Save</button>
            <a onclick="location.reload();" class="btn btn-primary btn-lg"><span class="fa fa-repeat"></span>Clear</a>
            <a href="/PlanningBlueprint" class="btn btn-primary btn-lg"><span class="fa fa-times"></span>Cancel</a>
        </div>
    }
</div>