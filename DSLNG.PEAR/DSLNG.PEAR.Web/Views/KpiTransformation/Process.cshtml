@model DSLNG.PEAR.Web.ViewModels.KpiTransformation.KpiTransformationViewModel
@{
    ViewBag.Title = "Process";
}
<div class="page-header">
    <h3>Kpi Transformation Process <small>@Model.Name</small></h3>
</div>
<style>
    #available-kpis, #selected-kpis {
        border: 1px solid #eee;
        width: 100%;
        min-height: 300px;
        list-style-type: none;
        margin: 0;
        padding: 5px 0 0 0;
        float: left;
        margin-right: 10px;
        text-align: center;
    }

        #available-kpis li, #selected-kpis li {
            margin: 0 5px 5px 5px;
            padding: 5px;
            font-size: 1.2em;
            width: 120px;
            display: inline-block;
            width: 95%;
            text-align: left;
            background-color: #fff;
        }

    .periode-container:first-child:last-child .btn-remove-periode {
        display: none !important;
    }

    .periode-container .btn-add-periode {
        display: none  !important;
    }

    .periode-container:last-child .btn-add-periode {
        display: inline-block  !important;
    }
</style>
<div class="row">
    <div class="col-md-8">
        <div class="row">
            <div class="col-md-6">
                <div class="add-button-wrapper">
                    <button class="btn btn-default">Move All</button>
                    <button class="btn btn-default">Move Selected Kpis</button>
                </div>
                <ul id="available-kpis" class="connectedSortable">
                    @foreach (var kpi in Model.Kpis)
                    {
                        <li class="ui-state-default" data-kpi-id="@kpi.Id"><input type="checkbox" /> @kpi.Name</li>
                    }
                </ul>
            </div>
            <div class="col-md-6">
                <div class="add-button-wrapper">
                    <button class="btn btn-default">Return All</button>
                    <button class="btn btn-default">Return Selected Kpis</button>
                    <button class="btn btn-primary pull-right" style="padding:10px 30px" data-toggle="modal" data-target="#scheduleProcess">Process</button>
                </div>
                <ul id="selected-kpis" class="connectedSortable"></ul>
            </div>
        </div>


    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="scheduleProcess" tabindex="-1" role="dialog" aria-labelledby="scheduleProcess" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="width:900px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title" id="myLargeModalLabel">Schedule Process</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    @using (Html.BeginForm("Process","KpiInformation",FormMethod.Post))
                    {
                        <div class="form-group">
                            <label class="control-label col-md-3">Periods</label>
                            <div class="col-md-9">
                                <div class="periods-wrapper">
                                    <div class="periode-container">
                                        @Html.DropDownList("Periods[x].PeriodeType", Model.PeriodeTypes, new { @class = "form-control periode-type", style = "display:inline" })
                                        <input class="form-control datepicker start" name="Periods[x].Start" style="display:inline" />
                                        <input class="form-control datepicker end" name="Periods[x].End" style="display:inline" />
                                        <button class="btn btn-default btn-remove-periode" style="display:inline">Remove</button><button class="btn btn-default btn-add-periode" style="display:inline">Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">ProcessingType</label>
                            <div class="col-md-9">
                                @Html.DropDownList("ProcessingType", Model.ProcessingTypes, new { @class = "form-control processing-type" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Schedule Time</label>
                            <div class="col-md-9">
                                <input class="form-control schedule-time" disabled name="sDateProcessing" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9">
                                <button type="submit" class="btn btn-default submit-process">Ok</button>
                                <button type="button" class="btn btn-default"  data-dismiss="modal" aria-label="Close">Cancel</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        $("#available-kpis, #selected-kpis").sortable({
            connectWith: ".connectedSortable"
        }).disableSelection();

        var $periodeTemmplate = $('.periode-container').clone();
        $(document).on('click', '.btn-add-periode', function (e) {
            e.preventDefault();
            var $priodeContainer = $periodeTemmplate.clone();
            $('.periods-wrapper').append($priodeContainer);
            $priodeContainer.find('.periode-type').change();
        });
        $(document).on('click', '.btn-remove-periode', function (e) {
            e.preventDefault();
            var $priodeContainer = $(this).parent();
            $priodeContainer.remove();
        });

        $(document).on('change', '.periode-type', function (e) {
            e.preventDefault();
            var $this = $(this);
            var $scope = $this.closest('.periode-container');
            var clearValue = $scope.find('.datepicker').each(function (i, val) {
                $(val).val('');
                if ($(val).data("DateTimePicker") !== undefined) {
                    $(val).data("DateTimePicker").destroy();
                }
            });
            switch ($this.val().toLowerCase().trim()) {
                case 'hourly':
                    $scope.find('.datepicker').each(function (i, val) {
                        $(val).datetimepicker({
                            format: "MM/DD/YYYY hh:00 A"
                        });
                    });
                    
                    break;
                case 'daily':
                    $scope.find('.datepicker').each(function (i, val) {
                        $(val).datetimepicker({
                            format: "MM/DD/YYYY"
                        });
                    });
                    //$('.datepicker').datetimepicker({
                    //    format: "MM/DD/YYYY"
                    //});
                    break;
                case 'weekly':
                    $scope.find('.datepicker').each(function (i, val) {
                        $(val).datetimepicker({
                            format: "MM/DD/YYYY",
                            daysOfWeekDisabled: [0, 2, 3, 4, 5, 6]
                        });
                    });
                    //$('.datepicker').datetimepicker({
                    //    format: "MM/DD/YYYY",
                    //    daysOfWeekDisabled: [0, 2, 3, 4, 5, 6]
                    //});
                    break;
                case 'monthly':
                    $scope.find('.datepicker').each(function (i, val) {
                        $(val).datetimepicker({
                            format: "MM/YYYY"
                        });
                    });
                    //$('.datepicker').datetimepicker({
                    //    format: "MM/YYYY"
                    //});
                    break;
                case 'yearly':
                    $scope.find('.datepicker').each(function (i, val) {
                        $(val).datetimepicker({
                            format: "YYYY"
                        });
                    });
                    break;
                default:

            }
        });
        $('.periode-type').change();
        $('.processing-type').change(function () {
            var $this = $(this);
            if ($this.val().toLowerCase() == 'scheduled') {
                $('.schedule-time').prop('disabled', false)
            } else {
                $('.schedule-time').prop('disabled', true)
            }
        });
        $('.schedule-time').datetimepicker({
            format: "MM/DD/YYYY HH:mm"
        });
        $('form').submit(function (e) {
            e.preventDefault();
            var $this = $(this);
            $this.find('input[name="SelectedKpis[]"]').each(function (i, val) {
                $(val).remove();
            })
            $('#selected-kpis li').each(function (i, val) {
                var kpiId = $(val).data('kpi-id');
                var $input = $('<input />');
                $input.attr('name', 'SelectedKpis[]');
                $input.attr('type', 'hidden');
                $input.val(kpiId);
                $this.prepend($input);
            });
            $this.find('.periode-container').each(function (i, val) {
                var $container = $(val);
                //periodeType
                var $periodeType = $container.find('.periode-type');
                $periodeType.attr('name', 'Periodes[' + i + '].PeriodeType');
                var $start = $container.find('.start');
                $start.attr('name', 'Periodes[' + i + '].sStart');
                var $end = $container.find('.end');
                $end.attr('name', 'Periodes[' + i + '].sEnd');
            })
        })
    });
</script>
