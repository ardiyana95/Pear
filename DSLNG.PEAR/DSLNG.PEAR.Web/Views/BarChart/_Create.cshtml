@model DSLNG.PEAR.Web.ViewModels.Artifact.ArtifactDesignerViewModel
@*<div class="form-group form-list">
    @Html.LabelFor(model => model.BarChart.FractionScale)
    @Html.TextBoxFor(model => model.BarChart.FractionScale, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.BarChart.FractionScale)
</div>

<div class="form-group form-list">
    @Html.LabelFor(model => model.BarChart.MaxValue)
    @Html.TextBoxFor(model => model.BarChart.MaxValue, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.BarChart.MaxValue)
</div>*@
<div class="form-group form-list">
    @Html.LabelFor(model => model.BarChart.SeriesTypes)
    @Html.DropDownList("seriesType", Model.BarChart.SeriesTypes, new { id = "seriesType", @class = "form-control" })
    <input type="submit" value="Add Series" class="btn btn-lightblue" id="add-series" />
</div>


<div id="hidden-fields">
    @for (var i = 0; i < Model.BarChart.SeriesList.Count; i++)
    { 
        <div data-kpi-url="@Url.Action("KpiList","Artifact")" class="series-template original whitebox">
            <h2>Series</h2>
            <div class="form-group form-list">
                @Html.LabelFor(model => model.BarChart.SeriesList[i].Label)
                @Html.TextBoxFor(model => model.BarChart.SeriesList[i].Label, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BarChart.SeriesList[i].Label)
            </div>
            <div class="stacks-holder">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add Stack" class="btn btn-default add-stack" />
                    </div>
                </div>
            </div>
            <div class="series-details-holder">
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.BarChart.SeriesList[i].KpiId)
                    @Html.DropDownListFor(model => model.BarChart.SeriesList[i].KpiId, Model.BarChart.KpiList, new { @class = "kpi-list form-control", style="width:200px" })
                    @Html.ValidationMessageFor(model => model.BarChart.SeriesList[i].KpiId)
                </div>
                <div class="form-group value-axis form-list">
                    @Html.LabelFor(model => Model.BarChart.SeriesList[i].ValueAxis)
                    @Html.DropDownListFor(model => model.BarChart.SeriesList[i].ValueAxis, Model.BarChart.ValueAxes, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BarChart.SeriesList[i].ValueAxis)
                </div>
            </div>
            <input type="button" value="Remove" class="remove" />
        </div>
        for (var j = 0; j < Model.BarChart.SeriesList[i].Stacks.Count; j++)
        { 
        <fieldset class="stack-template original">
            <legend>Stack</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.BarChart.SeriesList[i].Stacks[j].Label, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.BarChart.SeriesList[i].Stacks[j].Label)
                    @Html.ValidationMessageFor(model => model.BarChart.SeriesList[i].Stacks[j].Label)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BarChart.SeriesList[i].Stacks[j].KpiId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.BarChart.SeriesList[i].Stacks[j].KpiId, Model.BarChart.KpiList, new { @class = "kpi-list" })
                    @Html.ValidationMessageFor(model => model.BarChart.SeriesList[i].Stacks[j].KpiId)
                </div>
            </div>
            <input type="button" value="Remove" class="remove" />
        </fieldset>
        }
    }

</div>



