@model DSLNG.PEAR.Web.ViewModels.EnvironmentScanning.EnvironmentScanningViewModel

@{
    ViewBag.Title = "EnvironmentsScanning";
}

<div class="col-md-12 environment-scanning">
    @* Ultimate Objective *@
    <div class="row row-uo border-style-1">
        <h4>Ultimate Objective</h4>
    </div>
    <div class="row row-margin-5 color-white">
        <div class="div-envi col-md-4 border-style-1">
            <div class="col-md-4-child">
                <span><b>Ultimate Objective (Construction Phase)</b></span>
                <a href="#" class="input-popover" data-es-id="@Model.Id" data-type="cp" data-toggle="popover" data-placement="left" title="Construction Phase"><i class="fa fa-plus"></i></a>
            </div>
            <div>
                <ul class="cp-list">
                    @foreach (var item in Model.ConstructionPhase)
                    {
                        <li>@item.Description <a href="#" data-id="@item.Id" class="remove-button"><i class="fa fa-minus"></i></a></li>
                    }
                </ul>
                @Html.HiddenFor(model => model.Id)
            </div>
        </div>
        <div class="div-envi col-md-4 border-style-1">
            <div class="col-md-4-child">
                <span><b>Ultimate Objective (Operation Phase)</b></span>
                <a href="#" class="input-popover" data-es-id="@Model.Id" data-type="op" data-toggle="popover" data-placement="left" title="Construction Phase"><i class="fa fa-plus"></i></a>
            </div>
            <div>
                <ul class="op-list">
                    @foreach (var item in Model.OperationPhase)
                    {
                        <li>@item.Description <a href="#" data-id="@item.Id" class="remove-button"><i class="fa fa-minus"></i></a></li>
                    }
                </ul>
                @Html.HiddenFor(model => model.Id)
            </div>
        </div>
        <div class="div-envi col-md-4 border-style-1">
            <div class="col-md-4-child">
                <span><b>Ultimate Objective (Decomm.Re-Invent Phase)</b></span>
                <a href="#" class="input-popover" data-es-id="@Model.Id" data-type="rp" data-toggle="popover" data-placement="left" title="Reinvent Phase"><i class="fa fa-plus"></i></a>
            </div>
            <div>
                <ul class="rp-list">
                    @foreach (var item in Model.ReinventPhase)
                    {
                        <li>@item.Description <a href="#" data-id="@item.Id" class="remove-button"><i class="fa fa-minus"></i></a></li>

                    }
                </ul>
                @Html.HiddenFor(model => model.Id)
            </div>
        </div>
    </div>


    @*Environmental Scanning*@
    <div class="row row-environmental margin-style-1">
        <h4>Environmental Scanning</h4>
    </div>
    <div class="row row-margin-5 color-white">
        <div class="col-md-3 popover-envi border-style-1">
            <div class="col-md-12 col-envi" style="background-color: red">
                <span><b>Threat</b></span>
                <a href="#" class="input-environmental" data-envi-id="@Model.Id" data-envi-type="th" data-toggle="popover" data-placement="left" title="Threat"><i class="fa fa-plus"></i></a>
            </div>
            <div class="col-md-12 div-row-child">
                <ul class="list-group th-list">
                    @{
                        foreach (var item in Model.Threat)
                        {
                            <li data-id="@item.Id">@item.Desc <a href="#" data-id="@item.Id" class="envi-remove-button"><i class="fa fa-minus"></i></a></li>
                        }
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-3 popover-envi border-style-1">
            <div class="col-md-12 col-envi" style="background-color: #33ff33">
                <span><b>Opportunity</b></span>
                <a href="#" class="input-environmental" data-envi-id="@Model.Id" data-envi-type="opp" data-toggle="popover" data-placement="left" title="Opportunity"><i class="fa fa-plus"></i></a>
            </div>
            <div class="col-md-12 div-row-child">
                <ul class="list-group opp-list">
                    @{
                        foreach (var item in Model.Opportunity)
                        {
                            <li data-id="@item.Id">@item.Desc <a href="#" data-id="@item.Id" class="envi-remove-button"><i class="fa fa-minus"></i></a></li>
                        }
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-3 popover-envi border-style-1">
            <div class="col-md-12 col-envi" style="background-color: #e580ff">
                <span><b>Weakness</b></span>
                <a href="#" class="input-environmental" data-envi-id="@Model.Id" data-envi-type="wk" data-toggle="popover" data-placement="left" title="Opportunity"><i class="fa fa-plus"></i></a>
            </div>
            <div class="col-md-12 div-row-child">
                <ul class="list-group wk-list">
                    @{
                        foreach (var item in Model.Weakness)
                        {
                            <li data-id="@item.Id">@item.Desc <a href="#" data-id="@item.Id" class="envi-remove-button"><i class="fa fa-minus"></i></a></li>
                        }
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-3 popover-envi border-style-1">
            <div class="col-md-12 col-envi" style="background-color: #3333ff">
                <span><b>Strength</b></span>
                <a href="#" class="input-environmental" data-envi-id="@Model.Id" data-envi-type="st" data-toggle="popover" data-placement="left" title="Opportunity"><i class="fa fa-plus"></i></a>
            </div>
            <div class="col-md-12 div-row-child">
                <ul class="list-group st-list">
                    @{
                        foreach (var item in Model.Strength)
                        {
                            <li data-id="@item.Id">@item.Desc <a href="#" data-id="@item.Id" class="envi-remove-button"><i class="fa fa-minus"></i></a></li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>

    @* Constraints *@
    <div class="row row-constraint margin-style-1 border-style-1" style="background-color: #cc0000">
        <h6>Constraint</h6>
        <a href="#" class="btn-create-constraint" data-envi-id="@Model.Id" data-toggle="popover" data-placement="left" title="Constraint"><i class="fa fa-plus"></i></a>
    </div>
    <div class="row row-margin-5 row-table-constrain">
        <table class="table table-constraint border-style-1">
            <tr>
                <td class="td-entity"><b>Relation</b></td>
                <td class="td-definition"><b>Definiton</b> </td>
                <td class="td-entity"><b>Type</b></td>
                <td class="td-entity"><b>Category</b></td>
            </tr>
            @{foreach (var item in Model.Constraints)
            {
                <tr>
                    <td class="td-entity">
                        @*<a href="#" data-toggle="modal" data-target="#envi-modal" data-id="@item.Id" data-th="@item.ThreatIdString" data-opp="@item.OpportunityIdString" data-wk="@item.WeaknessIdString" data-st="@item.StrengthIdString" class="btn-show-constraint">*@
                        @{
                if (item.ThreatIds.Count() > 0)
                {
                    <span><a href="#" data-th="@item.ThreatIdString" class="btn-show-constraint">T</a></span>
                }

                if (item.OpportunityIds.Count() > 0)
                {
                    <span><a href="#" data-opp="@item.OpportunityIdString" class="btn-show-constraint">O</a></span>
                }

                if (item.WeaknessIds.Count() > 0)
                {
                    <span><a href="#" data-wk="@item.WeaknessIdString" class="btn-show-constraint">W</a></span>
                }

                if (item.StrengthIds.Count() > 0)
                {
                    <span><a href="#" data-st="@item.StrengthIdString" class="btn-show-constraint">S</a></span>
                }

                        }
                        @*</a>*@
                    </td>
                    <td class="td-definition">@item.Definition <a href="#" data-id="@item.Id" class="constraint-remove-button"><i class="fa fa-minus"></i></a></td>
                    <td class="td-entity">@item.Type</td>
                    <td class="td-entity">@item.Category</td>
                </tr>
            }

            }

        </table>
    </div>


    @* Challenges *@
    <div class="row row-challenges margin-style-1 border-style-1" style="background-color: #ffcc00">
        <h6>Challenges</h6>
        <a href="#" class="btn-create-challenges" data-envi-id="@Model.Id" data-toggle="popover" data-placement="left" title="Challenges"><i class="fa fa-plus"></i></a>
    </div>
    <div class="row row-margin-5 row-table-constrain">
        <table class="table table-challenge border-style-1">
            <tr>
                <td class="td-entity"><b>Relation</b></td>
                <td class="td-definition"><b>Definiton</b> </td>
                <td class="td-entity"><b>Type</b></td>
                <td class="td-entity"><b>Category</b></td>
            </tr>
            @{foreach (var item in Model.Challenges)
            {
                <tr>
                    <td class="td-entity">
                        @*<a href="#" data-toggle="modal" data-target="#envi-modal" data-id="@item.Id" data-th="@item.ThreatIdString" data-opp="@item.OpportunityIdString" data-wk="@item.WeaknessIdString" data-st="@item.StrengthIdString" class="btn-show-challenge">*@
                            @{
                if (item.ThreatIds.Count() > 0)
                {
                    <span><a href="#" data-th="@item.ThreatIdString" class="btn-show-challenge">T</a></span>
                }

                if (item.OpportunityIds.Count() > 0)
                {
                    <span><a href="#" data-opp="@item.OpportunityIdString" class="btn-show-challenge">O</a></span>
                }

                if (item.WeaknessIds.Count() > 0)
                {
                    <span><a href="#" data-wk="@item.WeaknessIdString" class="btn-show-challenge">W</a></span>
                }

                if (item.StrengthIds.Count() > 0)
                {
                    <span><a href="#" data-st="@item.StrengthIdString" class="btn-show-challenge">S</a></span>
                }

                            }
                       @* </a>*@
                    </td>
                    <td class="td-definition">@item.Definition <a href="#" data-id="@item.Id" class="challenge-remove-button"><i class="fa fa-minus"></i></a></td>
                    <td class="td-entity">@item.Type</td>
                    <td class="td-entity">@item.Category</td>
                </tr>
            }

            }
        </table>
    </div>
    <div class="row">
        <div class="col-md-12 artifact-designer-btns">
            @using (Html.BeginForm("SubmitEnvironmentsScanning", "PlanningBlueprint"))
            {
                @Html.Hidden("Id", Model.Id)
                <a href="@Url.Action("Index", "PlanningBlueprint")" class="btn btn-primary btn-lg"><span class="fa fa-times"></span>Cancel</a>
                <a href="@Url.Action("BusinessPostureIdentification", "PlanningBlueprint", new { Id = Model.BusinessPostureId })" class="btn btn-primary btn-lg"><span class="fa fa-arrow-right"></span>Business Posture Identification</a>
                <button type="submit" class="btn btn-primary btn-lg"><span class="fa fa-floppy-o"></span>Submit</button>
            }
        </div>
    </div>
</div>


@* Modal Environmental*@
<div class="modal fade" id="envi-modal" data-id="id">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close btn-finish-relation" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Relation</h3>
            </div>

            <div class="modal-body modal-envi">
            </div>

            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

@* Modal Constraint*@
<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close btn-finish-relation" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Select Relation</h3>
            </div>

            <div class="modal-body color-white">
                <div class="relation-contents"></div>


            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-finish-relation" data-dismiss="modal">Submit</button>
            </div>
        </div>
    </div>
</div>

@* Modal Challenge *@
<div class="modal fade" id="challengeModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close btn-finish-challenge" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Select Relation</h3>
            </div>

            <div class="modal-body color-white">
                <div class="relation-challenges"></div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-finish-challenge" data-dismiss="modal">Submit</button>
            </div>
        </div>
    </div>
</div>

@* Input Ultimate Objective *@
<div class="popover-content" style="display: none">

    @using (Html.BeginForm("Create", "EnvironmentScanning", FormMethod.Post, new { id = "form-input" }))
    {
        <label>Description</label>
        <input type="text" name="esId" hidden="hidden" />
        <input type="text" name="type" hidden="hidden" />
        <textarea name="Description" cols="25" rows="5"></textarea>
        <button class="btn btn-primary form-es-submit">Add</button>
    }
</div>

@* Input Environmental *@
<div class="popover-environmental" style="display: none">

    @using (Html.BeginForm("CreateEnvironmental", "EnvironmentScanning", FormMethod.Post, new { id = "form-input" }))
    {
        <label>Description</label>
        <input type="text" name="enviId" hidden="hidden" />
        <input type="text" name="enviType" hidden="hidden" />
        <textarea name="Description" cols="25" rows="5"></textarea>
        <button class="btn btn-primary form-envi-submit">Add</button>
    }
</div>


@* Input Constraints *@
<div class="input-constraint" style="display: none; background-color: black;">
    @using (Html.BeginForm("CreateConstraint", "EnvironmentScanning", FormMethod.Post, new { id = "form-constraint" }))
    {
        <div>
            <button type="button" class="btn btn-primary btn-relation" data-toggle="modal" data-target="#myModal" title="Relation">Select Relation</button>
        </div>
        <div class="wrapper-relation"></div>
        <div>
            @Html.LabelFor(model => model.Definition)
            @Html.TextAreaFor(model => model.Definition, new { cols = "25", rows = "5" })
        </div>
        <div>
            @Html.LabelFor(model => model.Type)
            @Html.DropDownListFor(model => model.Type, Model.Types)
        </div>
        <div>
            @Html.LabelFor(model => model.Category)
            @Html.DropDownListFor(model => model.Category, Model.Categories)
        </div>

        <div>
            <input type="text" name="enviId" hidden="hidden" />
            <button type="button" class="btn btn-primary form-input-constraint">Add</button>
        </div>

    }
</div>

@* Input Challenges *@
<div class="input-challenges" style="display: none;">
    @using (Html.BeginForm("CreateChallenge", "EnvironmentScanning", FormMethod.Post))
    {
        <div>
            <button type="button" class="btn btn-primary btn-challenge" data-toggle="modal" data-target="#challengeModal" title="Relation">Select Relation</button>
        </div>
        <div class="wrapper-challenge"></div>
        <div>
            @Html.LabelFor(model => model.Definition)
            @Html.TextAreaFor(model => model.Definition, new { cols = "25", rows = "5" })
        </div>
        <div>
            @Html.LabelFor(model => model.Type)
            @Html.DropDownListFor(model => model.Type, Model.Types)
        </div>
        <div>
            @Html.LabelFor(model => model.Category)
            @Html.DropDownListFor(model => model.Category, Model.Categories)
        </div>

        <div>
            <input type="text" name="enviId" hidden="hidden" />
            <button type="button" class="btn btn-primary form-input-challenge">Add</button>
        </div>

    }
</div>



@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.popover-envi').popover({
                selector: '.input-environmental',
                html: true,
                title: function () {
                    return 'test';
                },
                content: function () {
                    return $('.popover-environmental').html();
                }
            });

            $('.row-challenges').popover({
                selector: '.btn-create-challenges',
                html: true,
                title: function () {
                    return 'Test';
                },
                content: function () {
                    return $('.input-challenges').html();
                }
            });

            $('.row-constraint').popover({
                selector: '.btn-create-constraint',
                html: true,
                title: function () {
                    return 'Test';
                },
                content: function () {
                    return $('.input-constraint').html();
                }
            });

            $('body').popover({
                selector: '.input-popover',
                html: true,
                title: function () {
                    return 'Test';
                },
                content: function () {
                    return $('.popover-content').html();
                }
            });

            var popOverElem;
            $(document).on('click', '.input-popover', function () {
                var esId = $(this).data("es-id");
                var type = $(this).data("type");
                $('.popover').find('input[name="esId"]').attr('value', esId);
                $('.popover').find('input[name="type"]').attr('value', type);
                popOverElem = $(this);

            });

            $(document).on('click', '.input-environmental', function () {
                var enviId = $(this).data("envi-id");
                var enviType = $(this).data("envi-type");
                $('.popover').find('input[name="enviId"]').attr('value', enviId);
                $('.popover').find('input[name="enviType"]').attr('value', enviType);
                popOverElem = $(this);

            });

            $(document).on('click', '.btn-create-constraint', function () {
                var enviId = $(this).data("envi-id");
                $('.popover').find('input[name="enviId"]').attr('value', enviId);
                popOverElem = $(this);

            });

            $(document).on('click', '.btn-create-challenges', function () {
                var enviId = $(this).data("envi-id");
                $('.popover').find('input[name="enviId"]').attr('value', enviId);
                popOverElem = $(this);

            });

            $(document).on('click', '.form-es-submit', function (e) {
                e.preventDefault();
                var $that = $(this);
                $.ajax({
                    url: '@Url.Action("Create", "EnvironmentScanning")',
                    data: $that.closest('form').serialize(),
                    type: 'POST',
                    success: function (data) {
                        if (data.type == "cp") {
                            $('.cp-list').append($('<li>' + data.description + '<a href="#" data-id="' + data.id + '" class="remove-button"><i class="fa fa-minus"></i></a></li>'));
                            popOverElem.popover('hide');
                        }
                        else if (data.type == "op") {
                            $('.op-list').append($('<li>' + data.description + '<a href="#" data-id="' + data.id + '" class="remove-button"><i class="fa fa-minus"></i></a></li>'));
                            popOverElem.popover('hide');
                        }
                        else if (data.type == "rp") {
                            $('.rp-list').append($('<li>' + data.description + '<a href="#" data-id="' + data.id + '" class="remove-button"><i class="fa fa-minus"></i></a></li>'));
                            popOverElem.popover('hide');
                        }
                    }
                })
            });

            $(document).on('click', '.form-envi-submit', function (e) {
                e.preventDefault();
                var $that = $(this);
                $.ajax({
                    url: '@Url.Action("CreateEnvironmental", "EnvironmentScanning")',
                    data: $that.closest('form').serialize(),
                    type: 'POST',
                    success: function (data) {
                        if (data.type == "th") {
                            $('.th-list').append($('<li data-id="' + data.id + '">' + data.description + '<a href="#" data-id="' + data.id + '" class="envi-remove-button"><i class="fa fa-minus"></i></a></li>'));
                            popOverElem.popover('hide');
                        }
                        else if (data.type == "opp") {
                            $('.opp-list').append($('<li data-id="' + data.id + '">' + data.description + '<a href="#" data-id="' + data.id + '" class="envi-remove-button"><i class="fa fa-minus"></i></a></li>'));
                            popOverElem.popover('hide');
                        }
                        else if (data.type == "wk") {
                            $('.wk-list').append($('<li data-id="' + data.id + '">' + data.description + '<a href="#" data-id="' + data.id + '" class="envi-remove-button"><i class="fa fa-minus"></i></a></li>'));
                            popOverElem.popover('hide');
                        }
                        else if (data.type == "st") {
                            $('.st-list').append($('<li data-id="' + data.id + '">' + data.description + '<a href="#" data-id="' + data.id + '" class="envi-remove-button"><i class="fa fa-minus"></i></a></li>'));
                            popOverElem.popover('hide');
                        }
                    }
                })
            });


            $(document).on('click', '.remove-button', function () {
                if (confirm("Are you sure want to delete this item?")) {
                    var that = this;
                    var id = $(that).data('id')
                    $.ajax({
                        url: '@Url.Action("Delete", "EnvironmentScanning")',
                        data: { Id: id },
                        type: 'Post',
                        success: function (data) {
                            if (data.success === true) {
                                $(that).parent().remove();
                            }

                        }
                    })
                }
            });

            $(document).on('click', '.envi-remove-button', function () {
                if (confirm("Are you sure want to delete this item?")) {
                    var that = this;
                    var id = $(that).data('id')
                    $.ajax({
                        url: '@Url.Action("DeleteEnvironmental", "EnvironmentScanning")',
                        data: { Id: id },
                        type: 'Post',
                        success: function (data) {
                            if (data.success === true) {
                                $(that).parent().remove();
                            }

                        }
                    })
                }
            });

            $(document).on('click', '.constraint-remove-button', function () {
                if (confirm("Are you sure want to delete this item?")) {
                    var that = this;
                    var id = $(that).data('id')
                    $.ajax({
                        url: '@Url.Action("DeleteConstraint", "EnvironmentScanning")',
                        data: { Id: id },
                        type: 'Post',
                        success: function (data) {
                            if (data.success === true) {
                                $(that).closest('tr').remove();
                            }

                        }
                    })
                }
            });


            $(document).on('click', '.challenge-remove-button', function () {
                if (confirm("Are you sure want to delete this item?")) {
                    var that = this;
                    var id = $(that).data('id')
                    $.ajax({
                        url: '@Url.Action("DeleteChallenge", "EnvironmentScanning")',
                        data: { Id: id },
                        type: 'Post',
                        success: function (data) {
                            if (data.success === true) {
                                $(that).closest('tr').remove();
                            }

                        }
                    })
                }
            });


            $(document).on('click', '.form-input-constraint', function (e) {
                e.preventDefault();
                var $that = $(this);
                $.ajax({
                    url: '@Url.Action("CreateConstraint", "EnvironmentScanning")',
                    data: $that.closest('form').serialize(),
                    type: 'POST',
                    success: function (data) {
                        var relation = '';
                        if (data.threatIds.length > 0) {
                            relation = relation + '<a href="#" data-th="' + data.threatIds + '" class="btn-show-constraint">T</a> '
                        }
                        if (data.opportunityIds.length > 0) {
                            relation = relation + '<a href="#" data-opp="' + data.opportunityIds + '" class="btn-show-constraint">O</a> '
                        }
                        if (data.weaknessIds.length > 0) {
                            relation = relation + '<a href="#" data-wk="' + data.weaknessIds + '" class="btn-show-constraint">W</a> '
                        }
                        if (data.strengthIds.length > 0) {
                            relation = relation + '<a href="#" data-st="' + data.strengthIds + '" class="btn-show-constraint">S</a> '
                        }

                        var input = [];
                        input = input + 'data-th="' + data.threatIds + '"' + 'data-opp="' + data.opportunityIds + '"' + 'data-wk="' + data.weaknessIds + '"' + 'data-st="' + data.strengthIds + '"'

                        console.log(input);

                        $('.table-constraint').append('<tr><td class="td-entity">' + '<a href="#" data-toggle="modal" ' + input + ' data-target="#envi-modal" data-id="' + data.id + '" class="btn-show-constraint">' + '<span>' + relation + '</span>' + '</td><td class="td-definition">' + data.definition + '<a href="#" data-id="' + data.id + '" class="constraint-remove-button" style="float:right"><i class="fa fa-minus"></i></a>' + '</td><td class="td-entity">' + data.type + '</td><td class="td-entity">' + data.category + '</a></td></tr>');
                        popOverElem.popover('hide');
                        console.log(relation);
                    }
                })
            });

            $(document).on('click', '.form-input-challenge', function (e) {
                e.preventDefault();
                var $that = $(this);
                $.ajax({
                    url: '@Url.Action("CreateChallenge", "EnvironmentScanning")',
                    data: $that.closest('form').serialize(),
                    type: 'POST',
                    success: function (data) {
                        var relation = '';
                        if (data.threatIds.length > 0) {
                            relation = relation + '<a href="#" data-th="' + data.threatIds + '" class="btn-show-constraint">T</a> '
                        }
                        if (data.opportunityIds.length > 0) {
                            relation = relation + '<a href="#" data-opp="' + data.opportunityIds + '" class="btn-show-constraint">O</a> '
                        }
                        if (data.weaknessIds.length > 0) {
                            relation = relation + '<a href="#" data-wk="' + data.weaknessIds + '" class="btn-show-constraint">W</a> '
                        }
                        if (data.strengthIds.length > 0) {
                            relation = relation + '<a href="#" data-st="' + data.strengthIds + '" class="btn-show-constraint">S</a> '
                        }

                        $('.table-challenge').append('<tr><td class="td-entity">' + ' <a href="#" data-toggle="modal" data-target="#envi-modal" data-id="' + data.id + '" class="btn-show-challenge">' + '<span>' + relation + '</span>' + '</td><td class="td-definition">' + data.definition + '<a href="#" data-id="' + data.id + '" class="challenge-remove-button" style="float:right"><i class="fa fa-minus"></i></a>' + '</td><td class="td-entity">' + data.type + '</td><td class="td-entity">' + data.category + '</a></td></tr>');
                        popOverElem.popover('hide');
                    }
                })
            });


            $(document).on('click', '.btn-create-constraint', function (e) {
                e.preventDefault();
                $('.relation-contents').html('');
                var $that = this;
                var thList = $('.th-list').clone(true);
                var oppList = $('.opp-list').clone(true);
                var wkList = $('.wk-list').clone(true);
                var stList = $('.st-list').clone(true);
                thList.removeClass('th-list list-group');
                oppList.removeClass('opp-list list-group');
                wkList.removeClass('wk-list list-group');
                stList.removeClass('st-list list-group');
                thList.addClass('list-checkbox');
                oppList.addClass('list-checkbox');
                wkList.addClass('list-checkbox');
                stList.addClass('list-checkbox');

                thList.find('li').each(function (i, val) {
                    var $item = $(val);
                    $item.find('.envi-remove-button').remove();
                    var $checkbox = $('<input />');
                    $checkbox.prop('type', 'checkbox');
                    $checkbox.addClass('choose-list');
                    $item.prepend($checkbox);
                });
                var threat = $('<h4 />');
                threat.html('Threat');
                $('.relation-contents').append(threat, thList);

                oppList.find('li').each(function (i, val) {
                    var $item = $(val);
                    $item.find('.envi-remove-button').remove();
                    var $checkbox = $('<input />');
                    $checkbox.prop('type', 'checkbox');
                    $checkbox.addClass('choose-list');
                    $item.prepend($checkbox);
                });
                var opportunity = $('<h4 />');
                opportunity.html('Opportunity');
                $('.relation-contents').append(opportunity, oppList);

                wkList.find('li').each(function (i, val) {
                    var $item = $(val);
                    $item.find('.envi-remove-button').remove();
                    var $checkbox = $('<input />');
                    $checkbox.prop('type', 'checkbox');
                    $checkbox.addClass('choose-list');
                    $item.prepend($checkbox);
                });
                var weakness = $('<h4 />');
                weakness.html('Weakness');
                $('.relation-contents').append(weakness, wkList);

                stList.find('li').each(function (i, val) {
                    var $item = $(val);
                    $item.find('.envi-remove-button').remove();
                    var $checkbox = $('<input />');
                    $checkbox.prop('type', 'checkbox');
                    $checkbox.addClass('choose-list');
                    $item.prepend($checkbox);
                });
                var strength = $('<h4 />');
                strength.html('Strength');
                $('.relation-contents').append(strength, stList);

                //popOverElem = $this;
            });

            $(document).on('click', '.btn-finish-relation', function () {
                var $wrapper = $('.wrapper-relation');
                $wrapper.html('');
                $('input.choose-list:checked').each(function (i, val) {
                    var $hiddenId = $('<input />');
                    $hiddenId.prop('type', 'hidden');
                    $hiddenId.prop('name', 'RelationIds[]');
                    $hiddenId.val($(val).parent().data('id'));
                    $wrapper.append($hiddenId);
                    console.log($wrapper);
                });
            });

            $(document).on('click', '.btn-create-challenges', function (e) {
                e.preventDefault();
                $('.relation-challenges').html('');
                var $that = this;
                var thList = $('.th-list').clone(true);
                var oppList = $('.opp-list').clone(true);
                var wkList = $('.wk-list').clone(true);
                var stList = $('.st-list').clone(true);
                thList.removeClass('th-list list-group');
                oppList.removeClass('opp-list list-group');
                wkList.removeClass('wk-list list-group');
                stList.removeClass('st-list list-group');
                thList.addClass('list-checkbox');
                oppList.addClass('list-checkbox');
                wkList.addClass('list-checkbox');
                stList.addClass('list-checkbox');

                thList.find('li').each(function (i, val) {
                    var $item = $(val);
                    $item.find('.envi-remove-button').remove();
                    var $checkbox = $('<input />');
                    $checkbox.prop('type', 'checkbox');
                    $checkbox.addClass('choose-list');
                    $item.prepend($checkbox);
                });
                var threat = $('<h4 />');
                threat.html('Threat');
                $('.relation-challenges').append(threat, thList);

                oppList.find('li').each(function (i, val) {
                    var $item = $(val);
                    $item.find('.envi-remove-button').remove();
                    var $checkbox = $('<input />');
                    $checkbox.prop('type', 'checkbox');
                    $checkbox.addClass('choose-list');
                    $item.prepend($checkbox);
                });
                var opportunity = $('<h4 />');
                opportunity.html('Opportunity');
                $('.relation-challenges').append(opportunity, oppList);

                wkList.find('li').each(function (i, val) {
                    var $item = $(val);
                    $item.find('.envi-remove-button').remove();
                    var $checkbox = $('<input />');
                    $checkbox.prop('type', 'checkbox');
                    $checkbox.addClass('choose-list');
                    $item.prepend($checkbox);
                });
                var weakness = $('<h4 />');
                weakness.html('Weakness');
                $('.relation-challenges').append(weakness, wkList);

                stList.find('li').each(function (i, val) {
                    var $item = $(val);
                    $item.find('.envi-remove-button').remove();
                    var $checkbox = $('<input />');
                    $checkbox.prop('type', 'checkbox');
                    $checkbox.addClass('choose-list');
                    $item.prepend($checkbox);
                });
                var strength = $('<h4 />');
                strength.html('Strength');
                $('.relation-challenges').append(strength, stList);

            });

            $(document).on('click', '.btn-finish-challenge', function () {
                var $wrapper = $('.wrapper-challenge');
                $wrapper.html('');
                $('input.choose-list:checked').each(function (i, val) {
                    var $hiddenId = $('<input />');
                    $hiddenId.prop('type', 'hidden');
                    $hiddenId.prop('name', 'RelationIds[]');
                    $hiddenId.val($(val).parent().data('id'));
                    $wrapper.append($hiddenId);
                    console.log($wrapper);
                });
            });


            $(document).on('click', '.btn-show-constraint', function () {
                var $that = $(this);
                var Id = ($that).data('id');
                $.ajax({
                    url: '@Url.Action("ShowConstraint", "EnvironmentScanning")',
                    data: { id: Id },
                    type: 'POST',
                    dataType: "html",
                    success: function (data) {
                        $('.modal-envi').html(data);
                    }
                });
            });

            $(document).on('click', '.btn-show-challenge', function () {
                var $that = $(this);
                var Id = ($that).data('id');
                $.ajax({
                    url: '@Url.Action("ShowChallenge", "EnvironmentScanning")',
                    data: { id: Id },
                    type: 'POST',
                    dataType: "html",
                    success: function (data) {
                        $('.modal-envi').html(data);
                    }
                });
            });


            $(document).on('mouseenter', '.btn-show-constraint', function () {
                var $that = $(this);
                var $a = $that.closest('a');
                var threatIds = ($a).data('th');
                var opportunityIds = ($a).data('opp');
                var weaknessIds = ($a).data('wk');
                var strengthIds = ($a).data('st');


                if (typeof threatIds != 'string') {
                    threatIds = [threatIds];
                }
                else {
                    threatIds = threatIds.split(',');
                    var ithreatIds = [];
                    for (var i in threatIds) {
                        ithreatIds.push(parseInt(threatIds[i]));
                    }
                    threatIds = ithreatIds;
                }

                if (typeof opportunityIds != 'string') {
                    opportunityIds = [opportunityIds];
                }
                else {
                    opportunityIds = opportunityIds.split(',');
                    var iopportunityIds = [];
                    for (var i in opportunityIds) {
                        iopportunityIds.push(parseInt(opportunityIds[i]));
                    }
                    opportunityIds = iopportunityIds;
                }

                if (typeof weaknessIds != 'string') {
                    weaknessIds = [weaknessIds];
                }
                else {
                    weaknessIds = weaknessIds.split(',');
                    var iweaknessIds = [];
                    for (var i in weaknessIds) {
                        iweaknessIds.push(parseInt(weaknessIds[i]));
                    }
                    weaknessIds = iweaknessIds;
                }

                if (typeof strengthIds != 'string') {
                    strengthIds = [strengthIds];
                }
                else {
                    strengthIds = strengthIds.split(',');
                    var istrengthIds = [];
                    for (var i in strengthIds) {
                        istrengthIds.push(parseInt(strengthIds[i]));
                    }
                    strengthIds = istrengthIds;
                }

                $('.th-list').children('li').each(function (i, val) {
                    var $li = $(val);
                    if(threatIds.indexOf($li.data('id')) > -1)
                    {
                        $li.addClass('highlight');
                    }
                });

                $('.opp-list').children('li').each(function (i, val) {
                    var $li = $(val);
                    if (opportunityIds.indexOf($li.data('id')) > -1) {
                        $li.addClass('highlight');
                    }
                });

                $('.wk-list').children('li').each(function (i, val) {
                    var $li = $(val);
                    if (weaknessIds.indexOf($li.data('id')) > -1) {
                        $li.addClass('highlight');
                    }
                });

                $('.st-list').children('li').each(function (i, val) {
                    var $li = $(val);
                    if (strengthIds.indexOf($li.data('id')) > -1) {
                        $li.addClass('highlight');
                    }
                });
            });

            $(document).on('mouseleave', '.btn-show-constraint', function () {
                $('.highlight').each(function (i, val) {
                    $(val).removeClass('highlight');
                })
            });


            $(document).on('mouseenter', '.btn-show-challenge', function () {
                var $that = $(this);
                var $a = $that.closest('a');
                var threatIds = ($a).data('th');
                var opportunityIds = ($a).data('opp');
                var weaknessIds = ($a).data('wk');
                var strengthIds = ($a).data('st');


                if (typeof threatIds != 'string') {
                    threatIds = [threatIds];
                }
                else {
                    threatIds = threatIds.split(',');
                    var ithreatIds = [];
                    for (var i in threatIds) {
                        ithreatIds.push(parseInt(threatIds[i]));
                    }
                    threatIds = ithreatIds;
                }

                if (typeof opportunityIds != 'string') {
                    opportunityIds = [opportunityIds];
                }
                else {
                    opportunityIds = opportunityIds.split(',');
                    var iopportunityIds = [];
                    for (var i in opportunityIds) {
                        iopportunityIds.push(parseInt(opportunityIds[i]));
                    }
                    opportunityIds = iopportunityIds;
                }

                if (typeof weaknessIds != 'string') {
                    weaknessIds = [weaknessIds];
                }
                else {
                    weaknessIds = weaknessIds.split(',');
                    var iweaknessIds = [];
                    for (var i in weaknessIds) {
                        iweaknessIds.push(parseInt(weaknessIds[i]));
                    }
                    weaknessIds = iweaknessIds;
                }

                if (typeof strengthIds != 'string') {
                    strengthIds = [strengthIds];
                }
                else {
                    strengthIds = strengthIds.split(',');
                    var istrengthIds = [];
                    for (var i in strengthIds) {
                        istrengthIds.push(parseInt(strengthIds[i]));
                    }
                    strengthIds = istrengthIds;
                }

                $('.th-list').children('li').each(function (i, val) {
                    var $li = $(val);
                    if (threatIds.indexOf($li.data('id')) > -1) {
                        $li.addClass('highlight');
                    }
                });

                $('.opp-list').children('li').each(function (i, val) {
                    var $li = $(val);
                    if (opportunityIds.indexOf($li.data('id')) > -1) {
                        $li.addClass('highlight');
                    }
                });

                $('.wk-list').children('li').each(function (i, val) {
                    var $li = $(val);
                    if (weaknessIds.indexOf($li.data('id')) > -1) {
                        $li.addClass('highlight');
                    }
                });

                $('.st-list').children('li').each(function (i, val) {
                    var $li = $(val);
                    if (strengthIds.indexOf($li.data('id')) > -1) {
                        $li.addClass('highlight');
                    }
                });
            });

            $(document).on('mouseleave', '.btn-show-challenge', function () {
                $('.highlight').each(function (i, val) {
                    $(val).removeClass('highlight');
                })
            });


        });






    </script>
}