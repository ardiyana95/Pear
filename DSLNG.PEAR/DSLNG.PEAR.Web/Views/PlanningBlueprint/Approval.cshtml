@{
    ViewBag.Title = "Planning Blueprints Approval";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Planning Blueprints Approval</h2>
@Html.Partial("_MessageResponse")

<table id="planningBlueprints-table" class="table-transparent table table-bordered table-responsive" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Voyage Plan</th>
            <th>Voyage Plan Notes</th>
            <th>Midterm Phase Strategy</th>
             <th>Midterm Phase Strategy Notes</th>
            <th>Is Active</th>
            <th style="width:75px">Action</th>
        </tr>
    </thead>
</table>
<div class="modal fade" id="notes-modal" data-id="id">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close btn-finish-relation" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Notes</h3>
            </div>
            <div class="modal-body" style="color:#fff">
            </div>
             <div class="modal-footer" style="border-top:none">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $(document).on('click', '.show-notes', function (e) {
                var $this = $(this);
                $('#notes-modal .modal-body').html($this.parent().find('.notes-value').html());
            })
            $('#planningBlueprints-table').DataTable({
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "iDisplayLength": -1,
                "bProcessing": true,
                "bServerSide": true,
                "sServerMethod": "POST",
                @* "ajax": {
                    "url": '@Url.Action("Grid", "PlanningBlueprint")',
                    //"data": function ( d ) {
                    //    d.Filter = "Approved";
                    //    // d.custom = $('#myInput').val();
                    //    // etc
                    //}
                },*@
                "sAjaxSource": '@Url.Action("Grid", "PlanningBlueprint")',
                "order": [[1, "asc"]],
                "aoColumns": [
                    { "mDataProp": "Title", "name": "Title", "className": "dt-body-left" },
                    { "mDataProp": "Description", "name": "Description", "className": "dt-body-left" },
                    {
                        "orderable": false,
                        "data": null,
                        "defaultContent": '',
                        "mRender": function (data, type, row) {
                            if (row.BusinessPostureIdentification.IsBeingReviewed) {
                                return '@Html.ActionLink("Review", "ESReview", "PlanningBlueprint", new {id = "_id_"}, null)'.replace('_id_', row.BusinessPostureIdentification.Id);
                            } else if (row.BusinessPostureIdentification.IsRejected) {
                                return '@Html.ActionLink("Rejected", "ESReview", "PlanningBlueprint", new {id = "_id_"}, null)'.replace('_id_', row.BusinessPostureIdentification.Id);
                            } else if (row.BusinessPostureIdentification.IsApproved) {
                                return '@Html.ActionLink("Approved", "ESReview", "PlanningBlueprint", new {id = "_id_"}, null)'.replace('_id_', row.BusinessPostureIdentification.Id);
                            }else{
                                return "Prepare";
                            }
                        }
                    },
                    {
                        "orderable": false,
                        "data": null,
                        "defaultContent": '',
                        "mRender": function (data, type, row) {
                            if (row.BusinessPostureIdentification.IsRejected) {
                                return '<a href="#" class="show-notes" data-toggle="modal" data-target="#notes-modal">View</a>' +
                                    '<div class="notes-value">' + row.BusinessPostureIdentification.Notes + '</div>';
                            }
                            return '';
                        }
                    },
                     {
                         "orderable": false,
                         "data": null,
                         "defaultContent": '',
                         "mRender": function (data, type, row) {
                             console.log(row);
                             if (row.MidtermStragetyPlanning.IsBeingReviewed) {
                                 return '@Html.ActionLink("Review", "MPFReview", "PlanningBlueprint", new {id = "_id_"}, null)'.replace('_id_', row.MidtermStragetyPlanning.Id);
                             } else if (row.MidtermStragetyPlanning.IsRejected) {
                                 return '@Html.ActionLink("Rejected", "MPFReview", "PlanningBlueprint", new {id = "_id_"}, null)'.replace('_id_', row.MidtermStragetyPlanning.Id);
                             }
                             else if (row.MidtermStragetyPlanning.IsApproved) {
                                 return '@Html.ActionLink("Approved", "MPFReview", "PlanningBlueprint", new {id = "_id_"}, null)'.replace('_id_', row.MidtermStragetyPlanning.Id);
                             } else if (!row.MidtermPhaseFormulation.IsLocked) {
                                 return 'Prepare';
                             } else {
                                 return 'Locked';
                             }
                          }
                     },
                      {
                          "orderable": false,
                          "data": null,
                          "defaultContent": '',
                          "mRender": function (data, type, row) {
                              if (row.MidtermStragetyPlanning.IsRejected) {
                                  return '<a href="#" class="show-notes" data-toggle="modal" data-target="#notes-modal">View</a>' +
                                      '<div class="notes-value">' + row.MidtermStragetyPlanning.Notes + '</div>';
                              }
                              return '';
                          }
                      },
                    {
                        "mDataProp": "IsActive", "name": "IsActive", "render": function (data, type, row) {
                            var checked = '';
                            if (data) {
                                checked = 'checked="checked"';
                            }
                            return '<input type="checkbox" class="editor-active" ' + checked + ' disabled="disabled">';
                        },
                    },
                     {
                         "orderable": false,
                         "data": null,
                         "defaultContent": '',
                         "mRender": function (data, type, row) {
                             var editLink = '@Html.ActionLink("Edit", "REdit", "PlanningBlueprint", new {id = "_id_"}, null)'.replace('_id_', data.Id);
                             return '<form action="/Planningblueprint/Delete" method="POST" style="display:inline">' +
                                 '<input type="hidden" name="Id" value="'+row.Id+'" />' +
                                 '<a href="#" class="delete-row">Delete</a></form> | ' + editLink;
                         }
                     },
                ],
                rowCallback: function (row, data) {
                    // Set the checked state of the checkbox in the table
                    //$('input.is-active', row).prop('checked', data.IsActive == 1);
                }
            });

            $('#planningBlueprints-table').on('click', '.delete-row', function (e) {
                e.preventDefault();
                var $this = $(this);
                if (confirm('Are you sure want to delete this item?')) {
                    var $form = $this.closest('form');
                    $form.submit();
                }
            });


        });
    </script>
}